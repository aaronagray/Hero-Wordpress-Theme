@import "reset";

$context: 1200;

*, *:before, *:after { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }

%clearfix { 
	zoom:1; 
    &:before, &:after { 
        content: "\0020"; 
        display: block; 
        height: 0; 
        overflow: hidden; 
    }
    &:after {
        clear: both;
    }
}

%full-width-content {
  position: relative;
  &:before, &:after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 99999px;
  }
  &:after {
    right: 100%; 
  }
  &:before {
    left: 100%;
  }
}

%full-width-content-with-image {
  position: relative;
  &:before, &:after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 999px;
  }
  &:after {
    right: 100%; 
  }
  &:before {
    left: 100%;
  }
}

@mixin triangle($size, $offset, $color) {
  content: '';
  display: inline-block;
  position: relative;
  top: $offset;
  border: $size solid transparent;
  width: 1px;
  height: 0px;
  border-top-color: $color;
}

@mixin full($main-background: white, $left-background: red, $right-background: blue) {
  @extend %full-width-content;
  background-color: $main-background;
  display: inline-block;
  width: 100%;
  &:after {
    background-color: $left-background;
  }
  &:before {
    background-color: $right-background;
  }
}

@mixin full-image($image-url) {
  @extend %full-width-content;
    background: url($image-url) no-repeat center center fixed;
    background-size: cover;
  &:after {
    background: url($image-url) no-repeat center center fixed;
    background-size: cover;
  }
  &:before {
    background: url($image-url) no-repeat center center fixed;  
    background-size: cover;
  }
}

// Layout

@mixin container($context: $context) {
  max-width: $context + px;
  display: block;
  margin-left: auto;
  margin-right: auto;
  @extend %clearfix;
}

@mixin span($target) {
	$element-width: percentage($target/$context);
	width: $element-width;
	display: block;
	float: left;
}

@mixin nest($nested-target, $nested-context) {
	width: percentage($nested-target/$nested-context);
	display: block;
	float: left;
}

@mixin push-left($margin) {
  margin-left: percentage($margin / $context);
}

@mixin push-right($margin) {
  margin-right: percentage($margin / $context);
}

// Fonts

@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem; // Convert pixels to decimal
}

@mixin ck-font-face (
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal
) {

  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    src: url('#{$file-path}.eot');
    src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
         url('#{$file-path}.woff') format('woff'),
         url('#{$file-path}.ttf') format('truetype'),
         url('#{$file-path}.svg##{$font-family}') format('svg');
  }

}