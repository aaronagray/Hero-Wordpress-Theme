@import "normalize";

$context: 1200;

%clearfix { 
	zoom:1; 
    &:before, &:after { 
        content: "\0020"; 
        display: block; 
        height: 0; 
        overflow: hidden; 
    }
    &:after {
        clear: both;
    }
}

%full-width-content {
  position: relative;
  &:before, &:after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 99999px;
  }
  &:after {
    right: 100%; 
  }
  &:before {
    left: 100%;
  }
}

%full-width-content-with-image {
  position: relative;
  &:before, &:after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 999px;
  }
  &:after {
    right: 100%; 
  }
  &:before {
    left: 100%;
  }
}

@mixin full($main-background: white, $left-background: red, $right-background: blue) {
  @extend %full-width-content;
  background-color: $main-background;
  &:after {
    background-color: $left-background;
  }
  &:before {
    background-color: $right-background;
  }
}

@mixin full-image($image-url) {
  @extend %full-width-content-with-image;
    background: url($image-url) no-repeat top center fixed;
    background-size: cover;
  &:after {
    background: url($image-url) no-repeat top center fixed;
    background-size: cover;
  }
  &:before {
    background: url($image-url) no-repeat top center fixed;  
    background-size: cover;
  }
}

@mixin container() {
  max-width: $context + px;
  display: block;
  margin-left: auto;
  margin-right: auto;
  @extend %clearfix;
}

@mixin row($width: $context) {
	max-width: $width + px;
  display: block;
	margin-left: auto;
	margin-right: auto;
	@extend %clearfix;
}

@mixin span($target) {
	$element-width: percentage($target/$context);
	width: $element-width;
	display: block;
	float: left;
}

@mixin nest($nested-target, $nested-context) {
	width: percentage($nested-target/$nested-context);
	display: block;
	float: left;
}


// Fonts

@mixin font-size($sizeValue: 16) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem; // Convert pixels to decimal
}